nand_inv {
    @in in
    @out out = in !& in
}

@in(bits: 2) in


in_0 = in.0
in_1 = in.1
in_0_inv = nand_inv(in_0)
in_1_inv = nand_inv(in_1)


segment_1 = in_0_inv !& in_1_inv

segment_2_inv = in_0 !& in_1_inv
segment_2 = nand_inv(segment_2_inv)

segment_3_inv = in_0_inv !& in_1
segment_3 = nand_inv(segment_3_inv)

segment_4_inv = in_0 !& in_1
segment_4 = nand_inv(segment_4_inv)

segment_5 = in_1
segment_6 = 0

@out(bits: 16) out = [
    0, 1, 6, 7, 8:      segment_1,
    4, 5:               segment_2,
    13:                 segment_3,
    3:                  segment_4,
    2, 9:               segment_5,
    10, 11, 12, 14, 15: segment_6,
]